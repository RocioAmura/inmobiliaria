/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import inmobiliaria.Alquiler;
import inmobiliaria.AlquilerData;
import inmobiliaria.Inmueble;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static vistas.GestionAlquileres.escritorio;

/**
 *
 * @author pedro
 */
public class BuscarAlquileres extends javax.swing.JInternalFrame {
  private  DefaultTableModel modelo;
   private AlquilerData alqd;
    /**
     * Creates new form BuscarAlquileres
     */
    public BuscarAlquileres() {
        initComponents();
        
        alqd = new AlquilerData();
        this.cargarTabla();
    }
    
           private void cargarTabla() {
        List<Alquiler> alquileres = alqd.obtenerAlquileres();
        
        if (alquileres == null || alquileres.isEmpty()) {   
      JOptionPane.showMessageDialog(null, "No hay alquileres cargados en la base de datos");
        } else {
            modelo = (DefaultTableModel) this.tablaAlquileres.getModel();
            
            
            modelo.setRowCount(0);
            Object[] fila = new Object[6];

            for (int i = 0; i < alquileres.size(); i++) {
                fila[0] =  new SimpleDateFormat("dd/MM/yyyy").format(Date.valueOf(alquileres.get(i).getFechaInicio()));
                fila[1] =  new SimpleDateFormat("dd/MM/yyyy").format(Date.valueOf(alquileres.get(i).getFechaFin()));
                fila[2] = alquileres.get(i).getPrecio();
                fila[3] = alquileres.get(i).getObservaciones().toUpperCase();
                fila[4] = alquileres.get(i).getInmueble().getDireccion();
                fila[5] = alquileres.get(i).getPersona().getNombreCompleto();
                modelo.addRow(fila);
            }
        }
    }
           
           
        private void buscarTabla(String direccion) {
        List<Alquiler> alquils = alqd.obtenerAlquileresDireccion(direccion);
        
        if (alquils == null || alquils.isEmpty()) {   
      JOptionPane.showMessageDialog(null, "No hay alquileres con esa direccion cargados en la base de datos");
        } else {
            modelo = (DefaultTableModel) this.tablaAlquileres.getModel();
            
            
            modelo.setRowCount(0);
            Object[] fila = new Object[6];

            for (int i = 0; i < alquils.size(); i++) {
                fila[0] =  new SimpleDateFormat("dd/MM/yyyy").format(Date.valueOf(alquils.get(i).getFechaInicio()));
                fila[1] =  new SimpleDateFormat("dd/MM/yyyy").format(Date.valueOf(alquils.get(i).getFechaFin()));
                fila[2] = alquils.get(i).getPrecio();
                fila[3] = alquils.get(i).getObservaciones().toUpperCase();
                fila[4] = alquils.get(i).getInmueble().getDireccion();
                fila[5] = alquils.get(i).getPersona().getNombreCompleto();
                modelo.addRow(fila);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlquileres = new javax.swing.JTable();
        volver = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        campoDireccion = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaAlquileres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Fecha de Inicio", "Fecha de finalizacion", "Precio", "Observaciones", "Inmueble", "Persona"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaAlquileres);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 990, 270));

        volver.setText("Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });
        getContentPane().add(volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel1.setText("Buscar alquiler por direccion:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));
        getContentPane().add(campoDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 540, 30));

        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        getContentPane().add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 10, -1, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        escritorio.removeAll();
        escritorio.repaint();
        this.dispose();
        AlquilerTabla at = new AlquilerTabla();
        escritorio.add(at);
        at.setVisible(true);
    }//GEN-LAST:event_volverActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        this.buscarTabla(this.campoDireccion.getText().trim());
        
    }//GEN-LAST:event_buscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JTextField campoDireccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaAlquileres;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
