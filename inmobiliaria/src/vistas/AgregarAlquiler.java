/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import inmobiliaria.Alquiler;
import inmobiliaria.AlquilerData;
import inmobiliaria.Inmueble;
import inmobiliaria.InmuebleData;
import inmobiliaria.PersonaData;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import static vistas.GestionAlquileres.escritorio;

/**
 *
 * @author pedro
 */
public class AgregarAlquiler extends javax.swing.JInternalFrame {

    /**
     * Creates new form AgregarAlquiler
     */
    public AgregarAlquiler() {
        initComponents();
        this.personaC.removeAllItems();
        this.inmuebleC.removeAllItems();
        
        PersonaData pd = new PersonaData();
        InmuebleData id = new InmuebleData();
        List<inmobiliaria.Persona> personas = pd.obtenerPersonas();
        List<Inmueble> inmuebles = id.obtenerInmuebles();
        int i = 0;
        while(inmuebles.size()>i){
            
             if(inmuebles.get(i).isDisponibilidad()){
            this.inmuebleC.addItem(inmuebles.get(i).getDireccion());
             }
            i++;
        }
        i = 0;
        while(personas.size()>i){
            
 
            this.personaC.addItem(personas.get(i).getNombreCompleto());
            i++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        fechaInicio = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        campoPrecio = new javax.swing.JTextField();
        inmuebleC = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        personaC = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        campoObser = new javax.swing.JTextField();
        agregarB = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setClosable(true);

        jLabel1.setText("Elegir fecha de inicio:");

        jLabel3.setText("Precio:");

        inmuebleC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Inmueble:");

        jLabel5.setText("Persona:");

        personaC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Observaciones:");

        agregarB.setText("Agregar");
        agregarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inmuebleC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(campoPrecio))))))
                .addGap(51, 51, 51)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(personaC, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(campoObser, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(agregarB)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fechaInicio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(campoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inmuebleC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(personaC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoObser, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(agregarB)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarBActionPerformed
try{
        InmuebleData id = new InmuebleData();
        String comprobacionInicio ="";
     String comprobacionFinal ="";       
        try{comprobacionInicio = this.fechaInicio.getDate().toString();} catch (Exception ex){
            comprobacionInicio = "16";
        }
        
                
                
                           if(id.obtenerInmuebles(this.inmuebleC.getSelectedItem().toString()).get(0).isDisponibilidad()){
        
        if(this.campoPrecio.getText().trim().length() != 0  && comprobacionInicio != "16"){
 
            
            Date hoy = new Date();
            Date hoy2 = new Date();
            hoy2.setYear(hoy.getYear()+2);
            Calendar cal = fechaInicio.getCalendar();
     cal.add(Calendar.YEAR, +2);
     boolean comp = false;
            if(!fechaInicio.getDate().before(hoy2)){
                comp = true;
                //System.out.println("Si entro "+ hoy2.toString());
            } else {
                //System.out.println("else"+ hoy2.toString());
                comp = false;}
        AlquilerData ad = new AlquilerData();
        Alquiler alq = new Alquiler();
        PersonaData pd = new PersonaData();

        
        
       
       
        alq.setFechaInicio(fechaInicio.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
        alq.setFechaFin(cal.getTime().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
        alq.setPrecio(Long.valueOf(this.campoPrecio.getText().trim()));
        alq.setPersona( pd.obtenerPersonas(this.personaC.getSelectedItem().toString()));
        alq.setInmueble(id.obtenerInmuebles(this.inmuebleC.getSelectedItem().toString()).get(0));
        alq.setObservaciones(this.campoObser.getText().trim());
        //System.out.println("Establecido: "+ comp + hoy2);
        id.modificarDisponibilidad(this.inmuebleC.getSelectedItem().toString(), comp);
        ad.ingresarAlquiler(alq);
        
        escritorio.removeAll();
        escritorio.repaint();
        AlquilerTabla at = new AlquilerTabla();
        escritorio.add(at);
        at.setVisible(true);
        at.moveToFront();
 
        }else {
     JOptionPane.showMessageDialog(null, "Debes rellenar todos los campos para continuar");
     //Calendar cl = fechaInicio.getCalendar();
     //cl.add(Calendar.YEAR, +2);
     //Date dt = new Date();
        
        //System.out.println(cl.getTime().after(dt));}
        
      //try{  
     //System.out.println(this.fechaInicio.getDate().toString());} catch (Exception e) {
         //System.out.println(1 + "    "+ e.getMessage());
     //}
        
        
                  }
                           } else {JOptionPane.showMessageDialog(null, "El inmueble elegido no esta disponible para alquilar");}} catch(Exception ex) {
    JOptionPane.showMessageDialog(null, "El campo de inmueble o persona no contiene elementos, ya que no hay ninguno disponible para alquilar");
}
    
    }//GEN-LAST:event_agregarBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarB;
    private javax.swing.JTextField campoObser;
    private javax.swing.JTextField campoPrecio;
    private com.toedter.calendar.JDateChooser fechaInicio;
    private javax.swing.JComboBox<String> inmuebleC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox<String> personaC;
    // End of variables declaration//GEN-END:variables
}
